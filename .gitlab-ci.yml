# Note: This GitLab CI configuration is used for internal testing, users can ignore it.
include:
  - project: '${CI_PROJECT_NAMESPACE}/ci-libs-for-client-libraries'
    file:
      - '/${CI_PROJECT_NAME}/.gitlab-ci.yml'
  - project: 'deepl/ops/ci-cd-infrastructure/gitlab-ci-lib'
    file:
      - '/templates/.buildkit.yml'

variables:
  DOCKER_IMAGE_PREFIX: $CONTAINER_REGISTRY/oss-client-libraries/$CI_PROJECT_NAME-build
  COMPOSER_HOME: /.composer

# Global --------------------------

cache:
  key:
    files:
      - composer.json
      - composer.lock
  paths:
    - vendor/
    - /.composer

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_TAG
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'

stages:
  - build
  - check
  - test

before_script:
  # Install project dependencies using Composer
  - php /composer.phar install

# stage: build ---------------------

build image:
  stage: build
  extends: .buildkit
  variables:
    DOCKER_IMAGE: ${DOCKER_IMAGE_PREFIX}_${PHP_VERSION}
    BUILDKIT_IMAGE: $DOCKER_IMAGE:latest
    BUILDKIT_EXTRA_ARGS: "--opt build-arg:PHP_VERSION=${PHP_VERSION} --opt build-arg:CI_CONTAINER_REPO=${CI_REGISTRY_IMAGE}"
  parallel:
    matrix:
      - PHP_VERSION: "8.1-alpine"
      - PHP_VERSION: "8.0-alpine"
      - PHP_VERSION: "7.4-alpine"
      - PHP_VERSION: "7.3-alpine"

# stage: check ----------------------

.code_sniffer_base:
  stage: check
  image: ${DOCKER_IMAGE_PREFIX}_8.1-alpine
  script:
    - vendor/bin/phpcs

code_sniffer_scheduled:
  extends: .code_sniffer_base
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  retry: 2

code_sniffer_manual:
  extends: .code_sniffer_base
  rules:
    - if: $CI_PIPELINE_SOURCE != "schedule"

.license_check_base:
  stage: check
  image: ${DOCKER_IMAGE_PREFIX}_8.1-alpine
  script:
    - ./license_checker.sh '*.php' | tee license_check_output.txt
    - '[ ! -s license_check_output.txt ]'

license_check_scheduled:
  extends: .license_check_base
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  retry: 2

license_check_manual:
  extends: .license_check_base
  rules:
    - if: $CI_PIPELINE_SOURCE != "schedule"

# stage: test ----------------------

.test_base:
  stage: test
  extends: .test
  retry: 1
  parallel:
    matrix:
      - PHP_VERSION: "8.1-alpine"
      - PHP_VERSION: "8.1-alpine"
        USE_MOCK_SERVER: "use mock server"
      - PHP_VERSION: "8.0-alpine"
        USE_MOCK_SERVER: "use mock server"
      - PHP_VERSION: "7.4-alpine"
        USE_MOCK_SERVER: "use mock server"
      - PHP_VERSION: "7.3-alpine"
        USE_MOCK_SERVER: "use mock server"
  image: ${DOCKER_IMAGE_PREFIX}_${PHP_VERSION}
  script:
    - >
      if [[ ! -z "${USE_MOCK_SERVER}" ]]; then
        echo "Using mock server"
        export DEEPL_SERVER_URL=http://deepl-mock:3000
        export DEEPL_MOCK_SERVER_PORT=3000
        export DEEPL_PROXY_URL=http://deepl-mock:3001
        export DEEPL_MOCK_PROXY_SERVER_PORT=3001
      fi
    - vendor/bin/phpunit
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: reports/cobertura.xml
      junit:
        - reports/junit.xml
    when: always

test_scheduled:
  extends: .test_base
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  retry: 2

test_manual:
  extends: .test_base
  rules:
    - if: $CI_PIPELINE_SOURCE != "schedule"
